syntax = "proto3";

package moodle;
import "google/protobuf/timestamp.proto";

service MoodleInfoService {

  // Courses
  rpc ListAllCourses(Empty) returns (ListCoursesResponse) {}
  rpc GetCourseContents(CourseIdRequest) returns (CourseContentsList) {}
  rpc GetUserCourses(UserIdRequest) returns (UserCoursesResponse) {}
  
  // Users
  rpc GetEnrolledUsers(EnrolledUsersRequest) returns (EnrolledUsersResponse) {}

  // Assignments
  rpc GetCourseAssignments(CourseIdRequest) returns (CourseAssignmentsResponse) {}
  rpc GetAssignmentsBetweenDates(AssignmentDateRequest) returns (AssignmentsResponse) {}

  // Grades
  rpc GetUserGradesByType(UserGradesByTypeRequest) returns (UserGradesResponse) {}


}

// Common messages

message Empty {}

/////////////////////////////////////

// List all courses

message ListCoursesResponse {
  repeated Course courses = 1;
}

message Course {
  int32 id = 1;
  string fullname = 2;
  string displayname = 3;
  string idnumber = 4;
  string format = 5;
  int64 timecreated = 6; // Unix timestamp
  int64 timemodified = 7; // Unix timestamp
}

/////////////////////////////////////

// Get course contents

message CourseIdRequest {
  int32 courseid = 1;
}

message CourseContentsList {
  repeated CourseSection contents = 1; 
}

message CourseSection {
  int32 id = 1;
  string name = 2;
  int32 section = 3;
  repeated CourseModule modules = 4;
}

message CourseModule {
  int32 id = 1;
  string name = 2;
  repeated ModuleDate dates = 3;
}

message ModuleDate {
  string label = 1;
  int64 timestamp = 2;
}

/////////////////////////////////////

// Get enrolled users

message UserIdRequest {
  int32 userid = 1;
}

message UserCoursesResponse {
  repeated UserCourse courses = 1;
}

message UserCourse {
  int32 id = 1;
  string fullname = 2;
  string displayname = 3;
  string idnumber = 4;
  string format = 5;
  int64 timemodified = 6; // Unix timestamp
}

/////////////////////////////////////

// Get enrolled users

message EnrolledUsersRequest {
  int32 courseid = 1;
}

message EnrolledUsersResponse {
  repeated EnrolledUser users = 1;
}

message EnrolledUser {
  int32 id = 1;
  string username = 2;
  string firstname = 3;
  string lastname = 4;
  string fullname = 5;
  string email = 6;
  repeated UserCourseEnrolled enrolledcourses = 7;
  repeated UserRole roles = 8;
}

message UserCourseEnrolled {
  int32 id = 1;
  string fullname = 2;
  string shortname = 3;
}

message UserRole {
  int32 roleid = 1;
  string shortname = 2;
}

/////////////////////////////////////

// Get course assignments

message CourseAssignmentsResponse {
  repeated CourseAssignment assignments = 1;
}

message CourseAssignment {
  int32 id = 1;
  int32 cmid = 2;
  int32 course = 3;
  string name = 4;
  bool sendnotifications = 5;
  int64 duedate = 6;  // Unix timestamp
  int32 grade = 7;
  string intro = 8;
}

/////////////////////////////////////

// Get assignments between dates

message AssignmentDateRequest {
  int32 courseid = 1;
  string startdate = 2;  // Format: YYYY-MM-DD
  string enddate = 3;    // Format: YYYY-MM-DD
}

message Assignment {
  int32 id = 1;
  int32 cmid = 2;
  int32 course = 3;
  string name = 4;
  bool sendnotifications = 5;
  int64 duedate = 6;
  int32 grade = 7;
  string intro = 8;
}

message AssignmentsResponse {
  repeated Assignment assignments = 1;
}

/////////////////////////////////////

// Get user grades by type

message UserGradesByTypeRequest {
  int32 courseid = 1;
  int32 userid = 2;
  string gradeitem = 3;  // "Assignment" en este caso
}

message UserGradesResponse {
  int32 courseid = 1;
  int32 userid = 2;
  string userfullname = 3;
  repeated GradeItem gradeItems = 4;
}

message GradeItem {
  string itemname = 1;
  string grade = 2;  // Puede ser "-" o el valor de la calificaci√≥n
}

/////////////////////////////////////